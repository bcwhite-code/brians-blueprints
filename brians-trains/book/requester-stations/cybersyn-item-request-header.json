{
  "index": 2,
  "blueprint": {
    "item": "blueprint",
    "label": "Cybersyn Item Request Header",
    "description": "1) Create a requester station body first.\n2) Then add Cybersyn head.\n3) Wire red & green from big power pole to main rail poles. (optional)\n4) Configure in the REQ combinator by changing the amount of the desired item type with the NEGATIVE maximum amount that should be held locally.\n\nThe requested amount must be such that a full request from empty cannot overload the tracks so set the amount to be no more than\n\n    item-stack-size * 40 * train-cars * (stacker-tracks + 2) - 1\n",
    "shift_x": -881,
    "shift_y": -181,
    "version": 562949956501504,
    "entities": [
      {
        "name": "arithmetic-combinator",
        "control_behavior": {
          "arithmetic_conditions": {
            "operation": "*",
            "first_signal": {"name": "signal-S", "type": "virtual"},
            "first_signal_networks": {"green": false, "red": true},
            "output_signal": {"name": "cybersyn-request-threshold", "type": "virtual"},
            "second_signal": {"name": "signal-each", "type": "virtual"},
            "second_signal_networks": {"green": true, "red": false}
          }
        },
        "position": {"x": 5.5, "y": 6}
      },
      {"name": "big-electric-pole", "position": {"x": 0, "y": 0}},
      {
        "name": "constant-combinator",
        "direction": 12,
        "player_description": "The \"request threshold\" is relative to a full train.  A NEGATIVE number will allow partial trains with up to that amount empty.  A positive number will delay calling a train until more buffer space is free so not really any use for it.  \n\nOr remove the two combinators to the left-side of the track and then the \"request threshold\" becomes an absolute amount.  Check the output of those combinators to know how much is in a full train; it's in items, not stacks.",
        "control_behavior": {
          "sections": {
            "sections": [
              {
                "index": 1,
                "filters": [
                  {
                    "name": "cybersyn-priority",
                    "comparator": "=",
                    "count": 10,
                    "index": 1,
                    "quality": "normal",
                    "type": "virtual"
                  },
                  {
                    "name": "cybersyn-locked-slots",
                    "comparator": "=",
                    "count": 0,
                    "index": 2,
                    "quality": "normal",
                    "type": "virtual"
                  },
                  {
                    "name": "cybersyn-request-threshold",
                    "comparator": "=",
                    "count": 0,
                    "index": 3,
                    "quality": "normal",
                    "type": "virtual"
                  }
                ]
              }
            ]
          }
        },
        "position": {"x": 4.5, "y": 1.5}
      },
      {
        "name": "cybersyn-combinator",
        "direction": 12,
        "control_behavior": {
          "arithmetic_conditions": {"operation": "/", "second_constant": 18, "first_signal": {"name": "signal-Q", "type": "virtual"}}
        },
        "position": {"x": 4, "y": 2.5}
      },
      {
        "name": "decider-combinator",
        "direction": 4,
        "player_description": "Only unload valid requests.",
        "control_behavior": {
          "decider_conditions": {
            "conditions": [
              {
                "first_signal": {"name": "signal-each", "type": "virtual"},
                "first_signal_networks": {"green": false, "red": true}
              },
              {
                "comparator": ">",
                "compare_type": "and",
                "first_signal": {"name": "signal-each", "type": "virtual"},
                "first_signal_networks": {"green": true, "red": false}
              }
            ],
            "outputs": [
              {
                "copy_count_from_input": false,
                "networks": {"green": false, "red": true},
                "signal": {"name": "signal-each", "type": "virtual"}
              }
            ]
          }
        },
        "position": {"x": 7, "y": 2.5}
      },
      {"name": "medium-electric-pole", "position": {"x": 3.5, "y": 0.5}},
      {"name": "medium-electric-pole", "position": {"x": 8.5, "y": 2.5}},
      {"name": "medium-electric-pole", "position": {"x": 8.5, "y": 5.5}},
      {
        "name": "selector-combinator",
        "direction": 8,
        "control_behavior": {"operation": "stack-size"},
        "position": {"x": 6.5, "y": 6}
      },
      {"name": "straight-rail", "direction": 4, "position": {"x": 2, "y": 4}},
      {"name": "straight-rail", "direction": 4, "position": {"x": 4, "y": 4}},
      {"name": "straight-rail", "direction": 4, "position": {"x": 6, "y": 4}},
      {"name": "straight-rail", "direction": 4, "position": {"x": 8, "y": 4}},
      {
        "name": "train-stop",
        "direction": 12,
        "station": "",
        "color": {"a": 0.49803921580314636, "b": 1, "g": 0.49803921580314636, "r": 0},
        "control_behavior": {
          "read_from_train": true,
          "circuit_condition": {"comparator": ">", "constant": 0, "first_signal": {"name": "signal-L", "type": "virtual"}},
          "train_stopped_signal": {"name": "signal-T", "type": "virtual"}
        },
        "position": {"x": 2, "y": 2}
      }
    ],
    "icons": [
      {"index": 1, "signal": {"name": "train-stop"}},
      {"index": 2, "signal": {"name": "down-arrow", "type": "virtual"}}
    ],
    "wires": [
      ["0,0", 5, "3.5,0.5", 5],
      ["3.5,0.5", 1, "4,2.5", 1],
      ["3.5,0.5", 2, "4,2.5", 2],
      ["3.5,0.5", 2, "8.5,2.5", 2],
      ["3.5,0.5", 5, "8.5,2.5", 5],
      ["2,2", 1, "4,2.5", 3],
      ["2,2", 2, "7,2.5", 2],
      ["4,2.5", 1, "4.5,1.5", 1],
      ["4,2.5", 1, "7,2.5", 1],
      ["4,2.5", 1, "5.5,6", 3],
      ["7,2.5", 1, "8.5,5.5", 1],
      ["7,2.5", 3, "8.5,2.5", 1],
      ["8.5,2.5", 5, "8.5,5.5", 5],
      ["6.5,6", 1, "5.5,6", 1],
      ["6.5,6", 1, "8.5,5.5", 1],
      ["6.5,6", 4, "5.5,6", 2]
    ]
  }
}
